plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'scala'
	id 'maven-publish'
	id 'signing'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version 
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

configurations {
	includeAndExpose

	modApi {
		extendsFrom includeAndExpose
	}
	include {
		extendsFrom includeAndExpose
	}
}

configurations.all {
    resolutionStrategy {
        failOnNonReproducibleResolution()
    }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"


	includeAndExpose("org.scala-lang:scala3-library_3:${project.scala_version}")
	includeAndExpose("org.scala-lang:scala-library:2.13.6")
	includeAndExpose("org.typelevel:cats-core_3:${project.cats_version}")
	includeAndExpose "org.typelevel:cats-effect-kernel_3:${project.cats_effect_version}"
	includeAndExpose "org.typelevel:cats-effect-std_3:${project.cats_effect_version}"
	includeAndExpose "org.typelevel:cats-effect_3:${project.cats_effect_version}"
	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from { configurations.include.collect { it.isDirectory() ? it : zipTree(it) } }
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}
scaladoc {
	source = sourceSets.main.scala
}
task scaladocJar(type: Jar, dependsOn: scaladoc) {
	classifier = "javadoc"
	archiveClassifier = "javadoc"
	from scaladoc.destinationDir
}
// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// i am losing my marbles
			// from components.java
			
			artifact remapJar
			artifact remapSourcesJar
			artifact scaladocJar
			
			customizePom(pom, rootProject)
			
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
		maven {
			def releaseRepo = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
			def snapshotRepo = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
			url(project.mod_version.endsWith('SNAPSHOT') ? snapshotRepo : releaseRepo)
			credentials {
				username ossrhUsername
				password ossrhPassword
			}
		}
	}
}

def customizePom(pom, gradleProject) {
    pom.withXml {
        def root = asNode()

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            name 'Fabric Language Scala Cats'
            description gradleProject.description
            url 'https://github.com/TheDrawingCoder-Gamer/fabric-language-scala-cats'
            organization {
                name 'BulbyVR'
                url 'https://thedrawingcoder-gamer.github.io/'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/igr/repo-url-parser/issues'
            }
            licenses {
                license {
                    name 'The New BSD License'
                    url 'https://github.com/igr/repo-url-parser/blob/master/LICENSE'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/TheDrawingCoder-Gamer/fabric-language-scala-cats'
                connection 'scm:git:git://github.com/TheDrawingCoder-Gamer/fabric-language-scala-cats.git'
                developerConnection 'scm:git:ssh://git@github.com:TheDrawingCoder-Gamer/fabric-language-scala-cats.git'
            }
            developers {
                developer {
                    id 'bulbyvr'
                    name 'Ben Harless'
                    email 'benharless820@gmail.com'
                }
            }
        }
    }
}
signing {
	sign publishing.publications.mavenJava
}
